############# subset temp data
#subset out animal data
target <- c(0,1,2,3,4,5)
hdr1_temps_select <- hdr1_temps %>%
filter(AntennaID %in% target)
hdr1_temps <- hdr1_temps_select
################### hdr1
#make activity data non-cumulative
hdr1 <- hdr1 %>%
add_column(MOD_ADX = hdr1_act$MOD_ADX) %>%
mutate(Activity = MOD_ADX - lag(MOD_ADX, default = 0))
#subset out baseline data
baseline <- c(7)
baseline_cage <- hdr1 %>%
filter(Animal %in% baseline)
#subset out animal data
target <- c(0,1,2,3,4,5,6)
cages <- hdr1 %>%
filter(Animal %in% target)
cages <- cages %>%
dplyr::select(Animal_ID, sex, DateTime, date, time, weight, Activity, EE_KCalH, EE_kJH, H2Omg,
H2Oml, Deg_C, CO2, VO2, VCO2, RQ, SD_VO2, SD_VCO2, SD_H2Oml,
SD_H2Omg, SS4_FR, H2O_WVP, BP)
hdr1_cages <- cages
count = 1
dependent_variables = c("EE_kJH", "RQ", "VO2", "VCO2", "H2Omg", "Activity")
varname_list = c("EE_OLs","RQ_OLs","VO2_OLs","VCO2_OLs","H2O_OLs", "Activity_OLs")
for (DV in dependent_variables){
print(DV)
model <- lm(as.formula(paste0(DV, " ~ Animal_ID")), data = hdr1_cages)
model.metrics <- augment(model) %>% dplyr::select(-.hat, -.sigma, -.fitted)
summ <- model.metrics %>% filter(abs(.std.resid) > 2) %>% as.data.frame()
OL_list = c()
masterlist = c()
for (each_outlier_row in 1:nrow(summ)){
this_weight <- summ[each_outlier_row, "Animal_ID"]
this_DV  <- summ[each_outlier_row, DV]
OL_list <- c(OL_list, (which(hdr1_cages$Animal_ID == this_weight & hdr1_cages[DV] == this_DV)))
}
print(OL_list)
#Assign list of outliers to specified variable lists (OL_list_EE_kJH, RQ, VO2, VCO2, mgH2O)
assign(paste("OL_list_", DV, sep = ""), OL_list)
}
masterlist <- c(OL_list_EE_kJH, OL_list_RQ, OL_list_VO2, OL_list_VCO2, OL_list_H2Omg, OL_list_Activity)
masterlist_noDup <- unique(masterlist)
highfat_dehydration_noOL_rep1 <- hdr1_cages[-c(masterlist_noDup),]
################### hdr2
#make activity data non-cumulative
hdr2 <- hdr2 %>%
add_column(MOD_ADX = hdr2_act$MOD_ADX) %>%
mutate(Activity = MOD_ADX - lag(MOD_ADX, default = 0))
#subset out baseline data
baseline <- c(7)
baseline_cage <- hdr2 %>%
filter(Animal %in% baseline)
#subset out animal data
target <- c(0,1,2,3,4,5,6)
cages <- hdr2 %>%
filter(Animal %in% target)
cages <- cages %>%
dplyr::select(Animal_ID, sex, DateTime, date, time, weight, Activity, EE_KCalH, EE_kJH, H2Omg,
H2Oml, Deg_C, CO2, VO2, VCO2, RQ, SD_VO2, SD_VCO2, SD_H2Oml,
SD_H2Omg, SS4_FR, H2O_WVP, BP)
hdr2_cages <- cages
count = 1
dependent_variables = c("EE_kJH", "RQ", "VO2", "VCO2", "H2Omg", "Activity")
varname_list = c("EE_OLs","RQ_OLs","VO2_OLs","VCO2_OLs","H2O_OLs", "Activity_OLs")
for (DV in dependent_variables){
print(DV)
model <- lm(as.formula(paste0(DV, " ~ Animal_ID")), data = hdr2_cages)
model.metrics <- augment(model) %>% dplyr::select(-.hat, -.sigma, -.fitted)
summ <- model.metrics %>% filter(abs(.std.resid) > 2) %>% as.data.frame()
OL_list = c()
masterlist = c()
for (each_outlier_row in 1:nrow(summ)){
this_weight <- summ[each_outlier_row, "Animal_ID"]
this_DV  <- summ[each_outlier_row, DV]
OL_list <- c(OL_list, (which(hdr2_cages$Animal_ID == this_weight & hdr2_cages[DV] == this_DV)))
}
print(OL_list)
#Assign list of outliers to specified variable lists (OL_list_EE_kJH, RQ, VO2, VCO2, mgH2O)
assign(paste("OL_list_", DV, sep = ""), OL_list)
}
masterlist <- c(OL_list_EE_kJH, OL_list_RQ, OL_list_VO2, OL_list_VCO2, OL_list_H2Omg, OL_list_Activity)
masterlist_noDup <- unique(masterlist)
highfat_dehydration_noOL_rep2 <- hdr2_cages[-c(masterlist_noDup),]
################### hdr3
#make activity data non-cumulative
hdr3 <- hdr3 %>%
add_column(MOD_ADX = hdr3_act$MOD_ADX) %>%
mutate(Activity = MOD_ADX - lag(MOD_ADX, default = 0))
dim(hdr3)
dim(hdr3_act)
library(renv)
library(rmarkdown)
#library(devtools)
library(tidyverse)
library(lubridate)
library(readr)
library(viridis)
library(patchwork)
library(tidyselect)
library(readxl)
library(broom)
#library(cowplot)
library(DescTools)
#library(ggpubr)
library(plyr)
library(pwr)
library(Cairo)
#library(ggpattern)
#library(timeDate)
library(mgcv)
library(MASS)
library(dplyr)
setwd("C:/Users/mdm2000/OneDrive - USNH/PeroPhysiology/R/highfat_dehydration/")
path <- "C:/Users/mdm2000/OneDrive - USNH/PeroPhysiology/data/highfat_dehydration_rep1/"
source("C:/Users/mdm2000/OneDrive - USNH/PeroPhysiology/R/functions.R")
mouse_metadata_highfat_rep1 <- read_excel("C:/Users/mdm2000/OneDrive - USNH/PeroPhysiology/mouse_data.xlsx",
sheet = "rep1_highfat", col_types = c("text",
"numeric", "numeric", "text", "text",
"numeric", "text", "text", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "text"))
mouse_metadata_highfat_rep2 <- read_excel("C:/Users/mdm2000/OneDrive - USNH/PeroPhysiology/mouse_data.xlsx",
sheet = "rep2_highfat", col_types = c("text",
"numeric", "numeric", "text", "text",
"numeric", "text", "text", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "text"))
mouse_metadata_highfat_rep3 <- read_excel("C:/Users/mdm2000/OneDrive - USNH/PeroPhysiology/mouse_data.xlsx",
sheet = "rep3_highfat", col_types = c("text",
"numeric", "numeric", "text", "text",
"numeric", "text", "text", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "text"))
mouse_metadata_rep1 <- read_csv("C:/Users/mdm2000/OneDrive - USNH/PeroPhysiology/data/lowfat_dehydration_rep1/mouse_data_rep1.csv",skip_empty_rows=TRUE) %>%
mutate(date, date = as.Date(date, format = "%d-%m-%y", tz="EST")) %>%
unite("DateTime", date:time, remove = FALSE, sep =  " ") %>%
mutate(DateTime = as.POSIXlt(DateTime), tz="EST")
#this is for room temperature
path <- "C:/Users/mdm2000/OneDrive - USNH/PeroPhysiology/data/lowfat_dehydration_rep1/"
chunk1 <- bring_in_data_rep1("chunk1.csv")
chunk1 <- chunk1 %>% mutate(DateTime = with_tz(DateTime, tz="EST") + hours(1))
chunk1_act <- read_csv("C:/Users/mdm2000/OneDrive - USNH/PeroPhysiology/data/lowfat_baseline/chunk1_activity.csv", n_max=dim(chunk1)[1])
#this is the physiology data for the dehydration part of the highfat experiment rep1
path <- "C:/Users/mdm2000/OneDrive - USNH/PeroPhysiology/data/highfat_dehydration_rep1/"
hdr1 <- bring_in_data_highfat_rep1("highfat_dehydrated_rep1.csv")
#hdr1 <- hdr1 %>% mutate(DateTime = with_tz(DateTime, tz="EST") + hours(1))
#dont need to add 1 hours cause of Daylight savings
hdr1 <- hdr1 %>% mutate(DateTime = with_tz(DateTime, tz="EST"))
hdr1_act <- read_csv("C:/Users/mdm2000/OneDrive - USNH/PeroPhysiology/data/highfat_dehydration_rep1/highfat_dehydrated_rep1_activity.csv", n_max=dim(hdr1)[1])
hdr1_temps <- bring_in_temps_highfat_rep1("temps_rep1.csv")
#this is the physiology data for the dehydration part of the highfat experiment rep2
path <- "C:/Users/mdm2000/OneDrive - USNH/PeroPhysiology/data/highfat_dehydration_rep2/"
hdr2 <- bring_in_data_highfat_rep2("highfat_dehydrated_rep2.csv")
hdr2 <- hdr2 %>% mutate(DateTime = with_tz(DateTime, tz="EST"))
hdr2_act <- read_csv("C:/Users/mdm2000/OneDrive - USNH/PeroPhysiology/data/highfat_dehydration_rep2/highfat_dehydrated_rep2_activity.csv", n_max=dim(hdr2)[1])
hdr2_temps <- bring_in_temps_highfat_rep2("temps_rep2.csv")
#this is the physiology data for the dehydration part of the highfat experiment rep3
path <- "C:/Users/mdm2000/OneDrive - USNH/PeroPhysiology/data/highfat_dehydration_rep3/"
hdr3 <- bring_in_data_highfat_rep3("highfat_dehydrated_rep3.csv")
hdr3 <- hdr3 %>% mutate(DateTime = with_tz(DateTime, tz="EST"))
hdr3_act <- read_csv("C:/Users/mdm2000/OneDrive - USNH/PeroPhysiology/data/highfat_dehydration_rep3/highfat_dehydrated_rep3_activity.csv", n_max=dim(hdr3)[1])
hdr3_temps <- bring_in_temps_highfat_rep3("temps_rep3.csv")
###### fix chunk 1
chunk1 <- chunk1 %>%
add_column(MOD_ADX = chunk1_act$MOD_ADX) %>%
mutate(Activity = MOD_ADX - lag(MOD_ADX, default = 0))
#dates <- unique(chunk5$date)
#chunk5$day <- match(chunk5$date, dates)
#subset out baseline data
baseline <- c(7)
baseline_cage <- chunk1 %>%
filter(Animal %in% baseline)
#subset out animal data
target <- c(0,1,2,3,4,5,6)
cages <- chunk1 %>%
filter(Animal %in% target)
cages <- cages %>%
dplyr::select(Animal_ID, sex, DateTime, date, time, weight, Activity, EE_KCalH, EE_kJH, H2Omg,
H2Oml, Deg_C, CO2, VO2, VCO2, RQ, SD_VO2, SD_VCO2, SD_H2Oml,
SD_H2Omg, SS4_FR, H2O_WVP, BP)
chunk1 <- cages
############# subset temp data
#subset out animal data
target <- c(0,1,2,3,4,5)
hdr1_temps_select <- hdr1_temps %>%
filter(AntennaID %in% target)
hdr1_temps <- hdr1_temps_select
################### hdr1
#make activity data non-cumulative
hdr1 <- hdr1 %>%
add_column(MOD_ADX = hdr1_act$MOD_ADX) %>%
mutate(Activity = MOD_ADX - lag(MOD_ADX, default = 0))
#subset out baseline data
baseline <- c(7)
baseline_cage <- hdr1 %>%
filter(Animal %in% baseline)
#subset out animal data
target <- c(0,1,2,3,4,5,6)
cages <- hdr1 %>%
filter(Animal %in% target)
cages <- cages %>%
dplyr::select(Animal_ID, sex, DateTime, date, time, weight, Activity, EE_KCalH, EE_kJH, H2Omg,
H2Oml, Deg_C, CO2, VO2, VCO2, RQ, SD_VO2, SD_VCO2, SD_H2Oml,
SD_H2Omg, SS4_FR, H2O_WVP, BP)
hdr1_cages <- cages
count = 1
dependent_variables = c("EE_kJH", "RQ", "VO2", "VCO2", "H2Omg", "Activity")
varname_list = c("EE_OLs","RQ_OLs","VO2_OLs","VCO2_OLs","H2O_OLs", "Activity_OLs")
for (DV in dependent_variables){
print(DV)
model <- lm(as.formula(paste0(DV, " ~ Animal_ID")), data = hdr1_cages)
model.metrics <- augment(model) %>% dplyr::select(-.hat, -.sigma, -.fitted)
summ <- model.metrics %>% filter(abs(.std.resid) > 2) %>% as.data.frame()
OL_list = c()
masterlist = c()
for (each_outlier_row in 1:nrow(summ)){
this_weight <- summ[each_outlier_row, "Animal_ID"]
this_DV  <- summ[each_outlier_row, DV]
OL_list <- c(OL_list, (which(hdr1_cages$Animal_ID == this_weight & hdr1_cages[DV] == this_DV)))
}
print(OL_list)
#Assign list of outliers to specified variable lists (OL_list_EE_kJH, RQ, VO2, VCO2, mgH2O)
assign(paste("OL_list_", DV, sep = ""), OL_list)
}
masterlist <- c(OL_list_EE_kJH, OL_list_RQ, OL_list_VO2, OL_list_VCO2, OL_list_H2Omg, OL_list_Activity)
masterlist_noDup <- unique(masterlist)
highfat_dehydration_noOL_rep1 <- hdr1_cages[-c(masterlist_noDup),]
################### hdr2
#make activity data non-cumulative
hdr2 <- hdr2 %>%
add_column(MOD_ADX = hdr2_act$MOD_ADX) %>%
mutate(Activity = MOD_ADX - lag(MOD_ADX, default = 0))
#subset out baseline data
baseline <- c(7)
baseline_cage <- hdr2 %>%
filter(Animal %in% baseline)
#subset out animal data
target <- c(0,1,2,3,4,5,6)
cages <- hdr2 %>%
filter(Animal %in% target)
cages <- cages %>%
dplyr::select(Animal_ID, sex, DateTime, date, time, weight, Activity, EE_KCalH, EE_kJH, H2Omg,
H2Oml, Deg_C, CO2, VO2, VCO2, RQ, SD_VO2, SD_VCO2, SD_H2Oml,
SD_H2Omg, SS4_FR, H2O_WVP, BP)
hdr2_cages <- cages
count = 1
dependent_variables = c("EE_kJH", "RQ", "VO2", "VCO2", "H2Omg", "Activity")
varname_list = c("EE_OLs","RQ_OLs","VO2_OLs","VCO2_OLs","H2O_OLs", "Activity_OLs")
for (DV in dependent_variables){
print(DV)
model <- lm(as.formula(paste0(DV, " ~ Animal_ID")), data = hdr2_cages)
model.metrics <- augment(model) %>% dplyr::select(-.hat, -.sigma, -.fitted)
summ <- model.metrics %>% filter(abs(.std.resid) > 2) %>% as.data.frame()
OL_list = c()
masterlist = c()
for (each_outlier_row in 1:nrow(summ)){
this_weight <- summ[each_outlier_row, "Animal_ID"]
this_DV  <- summ[each_outlier_row, DV]
OL_list <- c(OL_list, (which(hdr2_cages$Animal_ID == this_weight & hdr2_cages[DV] == this_DV)))
}
print(OL_list)
#Assign list of outliers to specified variable lists (OL_list_EE_kJH, RQ, VO2, VCO2, mgH2O)
assign(paste("OL_list_", DV, sep = ""), OL_list)
}
masterlist <- c(OL_list_EE_kJH, OL_list_RQ, OL_list_VO2, OL_list_VCO2, OL_list_H2Omg, OL_list_Activity)
masterlist_noDup <- unique(masterlist)
highfat_dehydration_noOL_rep2 <- hdr2_cages[-c(masterlist_noDup),]
################### hdr3
#make activity data non-cumulative
hdr3 <- hdr3 %>%
add_column(MOD_ADX = hdr3_act$MOD_ADX) %>%
mutate(Activity = MOD_ADX - lag(MOD_ADX, default = 0))
#subset out baseline data
baseline <- c(7)
baseline_cage <- hdr3 %>%
filter(Animal %in% baseline)
#subset out animal data
target <- c(0,1,2,3,4,5,6)
cages <- hdr3 %>%
filter(Animal %in% target)
cages <- cages %>%
dplyr::select(Animal_ID, sex, DateTime, date, time, weight, Activity, EE_KCalH, EE_kJH, H2Omg,
H2Oml, Deg_C, CO2, VO2, VCO2, RQ, SD_VO2, SD_VCO2, SD_H2Oml,
SD_H2Omg, SS4_FR, H2O_WVP, BP)
hdr3_cages <- cages
count = 1
dependent_variables = c("EE_kJH", "RQ", "VO2", "VCO2", "H2Omg", "Activity")
varname_list = c("EE_OLs","RQ_OLs","VO2_OLs","VCO2_OLs","H2O_OLs", "Activity_OLs")
for (DV in dependent_variables){
print(DV)
model <- lm(as.formula(paste0(DV, " ~ Animal_ID")), data = hdr3_cages)
model.metrics <- augment(model) %>% dplyr::select(-.hat, -.sigma, -.fitted)
summ <- model.metrics %>% filter(abs(.std.resid) > 2) %>% as.data.frame()
OL_list = c()
masterlist = c()
for (each_outlier_row in 1:nrow(summ)){
this_weight <- summ[each_outlier_row, "Animal_ID"]
this_DV  <- summ[each_outlier_row, DV]
OL_list <- c(OL_list, (which(hdr3_cages$Animal_ID == this_weight & hdr3_cages[DV] == this_DV)))
}
print(OL_list)
#Assign list of outliers to specified variable lists (OL_list_EE_kJH, RQ, VO2, VCO2, mgH2O)
assign(paste("OL_list_", DV, sep = ""), OL_list)
}
masterlist <- c(OL_list_EE_kJH, OL_list_RQ, OL_list_VO2, OL_list_VCO2, OL_list_H2Omg, OL_list_Activity)
masterlist_noDup <- unique(masterlist)
highfat_dehydration_noOL_rep3 <- hdr3_cages[-c(masterlist_noDup),]
### REP1
rep1_water_removal <- ymd_hms("2022-12-19 11:59:59", tz="EST")
baseline_rep1 <- interval(rep1_water_removal - days(3), rep1_water_removal)
day1_rep1 <- interval(rep1_water_removal, rep1_water_removal + days(1))
day2_rep1 <- interval(rep1_water_removal + days(1), rep1_water_removal + days(2))
day3_rep1 <- interval(rep1_water_removal + days(2), rep1_water_removal + days(3))
baseline_temp_rep1 <- interval(rep1_water_removal - days(3), rep1_water_removal)
### REP2
rep2_water_removal <- ymd_hms("2022-12-26 11:59:59", tz="EST")
baseline_rep2 <- interval(rep2_water_removal - days(3), rep2_water_removal)
day1_rep2 <- interval(rep2_water_removal, rep2_water_removal + days(1))
day2_rep2 <- interval(rep2_water_removal + days(1), rep2_water_removal + days(2))
day3_rep2 <- interval(rep2_water_removal + days(2), rep2_water_removal + days(3))
baseline_temp_rep2 <- interval(rep2_water_removal - days(3), rep2_water_removal)
### REP3
rep3_water_removal <- ymd_hms("2023-01-02 11:59:59", tz="EST")
baseline_rep3 <- interval(rep3_water_removal - days(3), rep3_water_removal)
day1_rep3 <- interval(rep3_water_removal, rep3_water_removal + days(1))
day2_rep3 <- interval(rep3_water_removal + days(1), rep3_water_removal + days(2))
day3_rep3 <- interval(rep3_water_removal + days(2), rep3_water_removal + days(3))
baseline_temp_rep3 <- interval(rep3_water_removal - days(3), rep3_water_removal)
highfat_dehydration_noOL_rep1 <- highfat_dehydration_noOL_rep1 %>%
mutate(replicate = "rep1")
highfat_dehydration_noOL_rep1 <- highfat_dehydration_noOL_rep1 %>%
add_column(experiment_day = NA)
highfat_dehydration_noOL_rep1$experiment_day[highfat_dehydration_noOL_rep1$DateTime %within% baseline_rep1 == "TRUE"] <- "baseline"
highfat_dehydration_noOL_rep1$experiment_day[highfat_dehydration_noOL_rep1$DateTime %within% day1_rep1 == "TRUE"] <- "day1"
highfat_dehydration_noOL_rep1$experiment_day[highfat_dehydration_noOL_rep1$DateTime %within% day2_rep1 == "TRUE"] <- "day2"
highfat_dehydration_noOL_rep1$experiment_day[highfat_dehydration_noOL_rep1$DateTime %within% day3_rep1 == "TRUE"] <- "day3"
write.csv(highfat_dehydration_noOL_rep1, "highfat_dehydration_rep1.csv", row.names = FALSE)
highfat_dehydration_noOL_rep2 <- highfat_dehydration_noOL_rep2 %>%
mutate(replicate = "rep2")
highfat_dehydration_noOL_rep2 <- highfat_dehydration_noOL_rep2 %>%
add_column(experiment_day = NA)
highfat_dehydration_noOL_rep2$experiment_day[highfat_dehydration_noOL_rep2$DateTime %within% baseline_rep2 == "TRUE"] <- "baseline"
highfat_dehydration_noOL_rep2$experiment_day[highfat_dehydration_noOL_rep2$DateTime %within% day1_rep2 == "TRUE"] <- "day1"
highfat_dehydration_noOL_rep2$experiment_day[highfat_dehydration_noOL_rep2$DateTime %within% day2_rep2 == "TRUE"] <- "day2"
highfat_dehydration_noOL_rep2$experiment_day[highfat_dehydration_noOL_rep2$DateTime %within% day3_rep2 == "TRUE"] <- "day3"
write.csv(highfat_dehydration_noOL_rep2, "highfat_dehydration_rep2.csv", row.names = FALSE)
highfat_dehydration_noOL_rep3 <- highfat_dehydration_noOL_rep3 %>%
mutate(replicate = "rep3")
highfat_dehydration_noOL_rep3 <- highfat_dehydration_noOL_rep3 %>%
add_column(experiment_day = NA)
highfat_dehydration_noOL_rep3$experiment_day[highfat_dehydration_noOL_rep3$DateTime %within% baseline_rep3 == "TRUE"] <- "baseline"
highfat_dehydration_noOL_rep3$experiment_day[highfat_dehydration_noOL_rep3$DateTime %within% day1_rep3 == "TRUE"] <- "day1"
highfat_dehydration_noOL_rep3$experiment_day[highfat_dehydration_noOL_rep3$DateTime %within% day2_rep3 == "TRUE"] <- "day2"
highfat_dehydration_noOL_rep3$experiment_day[highfat_dehydration_noOL_rep3$DateTime %within% day3_rep3 == "TRUE"] <- "day3"
write.csv(highfat_dehydration_noOL_rep3, "highfat_dehydration_rep3.csv", row.names = FALSE)
###### make data frames that contain all the data for a given interval.
###TEMPS
baseline_temps <-
rbind(hdr1_temps[hdr1_temps$DateTime %within% baseline_temp_rep1,],
hdr2_temps[hdr2_temps$DateTime %within% baseline_temp_rep2,],
hdr3_temps[hdr3_temps$DateTime %within% baseline_temp_rep3,])
day1_temps <-
rbind(hdr1_temps[hdr1_temps$DateTime %within% day1_rep1,],
hdr2_temps[hdr2_temps$DateTime %within% day1_rep2,],
hdr3_temps[hdr3_temps$DateTime %within% day1_rep3,])
day2_temps <-
rbind(hdr1_temps[hdr1_temps$DateTime %within% day2_rep1,],
hdr2_temps[hdr2_temps$DateTime %within% day2_rep2,],
hdr3_temps[hdr3_temps$DateTime %within% day2_rep3,])
day3_temps <-
rbind(hdr1_temps[hdr1_temps$DateTime %within% day3_rep1,],
hdr2_temps[hdr2_temps$DateTime %within% day3_rep2,],
hdr3_temps[hdr3_temps$DateTime %within% day3_rep3,])
###PHYSIOLOGY
baseline <-
rbind(highfat_dehydration_noOL_rep1[highfat_dehydration_noOL_rep1$DateTime %within% baseline_rep1,],
highfat_dehydration_noOL_rep2[highfat_dehydration_noOL_rep2$DateTime %within% baseline_rep2,],
highfat_dehydration_noOL_rep3[highfat_dehydration_noOL_rep3$DateTime %within% baseline_rep3,])
day1 <-
rbind(highfat_dehydration_noOL_rep1[highfat_dehydration_noOL_rep1$DateTime %within% day1_rep1,],
highfat_dehydration_noOL_rep2[highfat_dehydration_noOL_rep2$DateTime %within% day1_rep2,],
highfat_dehydration_noOL_rep3[highfat_dehydration_noOL_rep3$DateTime %within% day1_rep3,])
day2 <-
rbind(highfat_dehydration_noOL_rep1[highfat_dehydration_noOL_rep1$DateTime %within% day2_rep1,],
highfat_dehydration_noOL_rep2[highfat_dehydration_noOL_rep2$DateTime %within% day2_rep2,],
highfat_dehydration_noOL_rep3[highfat_dehydration_noOL_rep3$DateTime %within% day2_rep3,])
day3 <-
rbind(highfat_dehydration_noOL_rep1[highfat_dehydration_noOL_rep1$DateTime %within% day3_rep1,],
highfat_dehydration_noOL_rep2[highfat_dehydration_noOL_rep2$DateTime %within% day3_rep2,],
highfat_dehydration_noOL_rep3[highfat_dehydration_noOL_rep3$DateTime %within% day3_rep3,])
all_data <- rbind(highfat_dehydration_noOL_rep1,highfat_dehydration_noOL_rep2,highfat_dehydration_noOL_rep3)
dim(hdr1_temps[hdr1_temps$DateTime %within% baseline_temp_rep1,])
dim(hdr2_temps[hdr2_temps$DateTime %within% baseline_temp_rep2,])
dim(hdr1_temps[hdr1_temps$DateTime %within% day1_rep1,])
dim(hdr2_temps[hdr2_temps$DateTime %within% day1_rep2,])
dim(hdr1_temps[hdr1_temps$DateTime %within% day1_rep1,])
dim(hdr2_temps[hdr2_temps$DateTime %within% day1_rep2,])
dim(hdr1_temps[hdr1_temps$DateTime %within% day3_rep1,])
dim(hdr2_temps[hdr2_temps$DateTime %within% day3_rep2,])
dim(highfat_dehydration_noOL_rep1[highfat_dehydration_noOL_rep1$DateTime %within% baseline_rep1,])
dim(highfat_dehydration_noOL_rep2[highfat_dehydration_noOL_rep2$DateTime %within% baseline_rep2,])
dim(highfat_dehydration_noOL_rep1[highfat_dehydration_noOL_rep1$DateTime %within% day1_rep1,])
dim(highfat_dehydration_noOL_rep2[highfat_dehydration_noOL_rep2$DateTime %within% day1_rep2,])
dim(highfat_dehydration_noOL_rep1[highfat_dehydration_noOL_rep1$DateTime %within% day2_rep1,])
dim(highfat_dehydration_noOL_rep2[highfat_dehydration_noOL_rep2$DateTime %within% day2_rep2,])
dim(highfat_dehydration_noOL_rep1[highfat_dehydration_noOL_rep1$DateTime %within% day3_rep1,])
dim(highfat_dehydration_noOL_rep2[highfat_dehydration_noOL_rep2$DateTime %within% day3_rep2,])
coeff <- 0
cols <- c("Baseline"="navyblue","Day 1"="sienna1","Day 2"="sienna3", "Day 3"="sienna4")
temperatures <- ggplot(data = hdr1_temps ,aes(x=as.POSIXct(time),y=body_temp)) +
scale_x_datetime(date_breaks = "2 hours", date_labels = "%H:%M") +
annotate("rect", xmin = as.POSIXct("1970-01-01 00:00:01", tz="UTC"),
xmax = as.POSIXct("1970-01-01 06:00:00", tz="UTC"),
ymin = -Inf, ymax = Inf, fill="grey84") +
annotate("rect", xmin = as.POSIXct("1970-01-01 21:00:00", tz="UTC"),
xmax = as.POSIXct("1970-01-01 23:59:59", tz="UTC"),
ymin = -Inf, ymax = Inf, fill="grey84") +
geom_point(aes(color = "Baseline", alpha=0.1), shape=20, size=0.5)+
geom_point(data = day1_temps, aes(color="Day 1", alpha=0.2), shape=20, size=0.5)+
geom_point(data = day2_temps, aes(color="Day 2", alpha=0.2), shape=20, size=0.5)+
geom_point(data = day3_temps, aes(color="Day 3", alpha=0.2), shape=20, size=0.5)+
geom_point(data = chunk1, aes(x=as.POSIXct(time), y=Deg_C + coeff), size=1, color="black", shape=4)+
labs(x = "")+
theme_classic()+
geom_smooth(method='gam', se = FALSE, aes(color = "Baseline"), span=0.2, size=2)+
geom_smooth(data = day1_temps, method='gam', se = FALSE, aes(color = "Day 1"), size=2)+
geom_smooth(data = day2_temps, method='gam', se = FALSE, aes(color = "Day 2"), size=2)+
geom_smooth(data = day3_temps, method='gam', se = FALSE, aes(color = "Day 3"), size=2)+
labs(x = "")+
scale_y_continuous(name = "Body Temperature (°C)", limits = c(20,40), sec.axis = sec_axis(~. - coeff, name="Room Temperature (°C)"))+
guides(alpha = "none")+
facet_wrap(~sex) +
scale_colour_manual(name="Dehydration",values=cols, guide="none")
temperatures
EE <- ggplot(data = baseline,aes(x=as.POSIXct(time),y=EE_kJH)) +
scale_x_datetime(date_breaks = "2 hours", date_labels = "%H:%M") +
annotate("rect", xmin = as.POSIXct("1970-01-01 00:00:01", tz="UTC"),
xmax = as.POSIXct("1970-01-01 06:00:00", tz="UTC"),
ymin = -Inf, ymax = Inf, fill="grey84") +
annotate("rect", xmin = as.POSIXct("1970-01-01 21:00:00", tz="UTC"),
xmax = as.POSIXct("1970-01-01 23:59:59", tz="UTC"),
ymin = -Inf, ymax = Inf, fill="grey84") +
geom_point(aes(color = "Baseline", alpha=0.1))+
geom_point(data = day1, aes(color="Day 1", alpha=0.2))+
geom_point(data = day2, aes(color="Day 2", alpha=0.2))+
geom_point(data = day3, aes(color="Day 3", alpha=0.2))+
theme_classic()+
ylim(0,1.5) +
geom_smooth(method='gam', se = FALSE, aes(color = "Baseline"))+
geom_smooth(data = day1, method='gam', se = FALSE, aes(color = "Day 1"))+
geom_smooth(data = day2, method='gam', se = FALSE, aes(color = "Day 2"))+
geom_smooth(data = day3, method='gam', se = FALSE, aes(color = "Day 3"))+
labs(x = "", y = expression(EE ~ (KiloJoules ~ h^-1)))+
guides(alpha = "none")+
facet_wrap(~sex) +
scale_colour_manual(name="Dehydration",values=cols, guide="none")
EE
activity <- ggplot(data = baseline,aes(x=as.POSIXct(time),y=Activity)) +
scale_x_datetime(date_breaks = "2 hours", date_labels = "%H:%M") +
annotate("rect", xmin = as.POSIXct("1970-01-01 00:00:01", tz="UTC"),
xmax = as.POSIXct("1970-01-01 06:00:00", tz="UTC"),
ymin = -Inf, ymax = Inf, fill="grey84") +
annotate("rect", xmin = as.POSIXct("1970-01-01 21:00:00", tz="UTC"),
xmax = as.POSIXct("1970-01-01 23:59:59", tz="UTC"),
ymin = -Inf, ymax = Inf, fill="grey84") +
geom_point(aes(color = "Baseline", alpha=0.2))+
geom_point(data = day1, aes(color="Day 1", alpha=0.2))+
geom_point(data = day2, aes(color="Day 2", alpha=0.2))+
geom_point(data = day3, aes(color="Day 3", alpha=0.2))+
theme_classic()+
ylim(0,1500) +
geom_smooth(method='gam', se = FALSE, aes(color = "Baseline"))+
geom_smooth(data = day1, method='gam', se = FALSE, aes(color = "Day 1"))+
geom_smooth(data = day2, method='gam', se = FALSE, aes(color = "Day 2"))+
geom_smooth(data = day3, method='gam', se = FALSE, aes(color = "Day 3"))+
labs(x = "", y = "Activity")+
guides(alpha = "none")+
facet_wrap(~sex) +
scale_colour_manual(name="Dehydration",values=cols, guide="none")
activity
water <- ggplot(data = baseline,aes(x=as.POSIXct(time),y=H2Omg)) +
scale_x_datetime(date_breaks = "2 hours", date_labels = "%H:%M") +
annotate("rect", xmin = as.POSIXct("1970-01-01 00:00:01", tz="UTC"),
xmax = as.POSIXct("1970-01-01 06:00:00", tz="UTC"),
ymin = -Inf, ymax = Inf, fill="grey84") +
annotate("rect", xmin = as.POSIXct("1970-01-01 21:00:00", tz="UTC"),
xmax = as.POSIXct("1970-01-01 23:59:59", tz="UTC"),
ymin = -Inf, ymax = Inf, fill="grey84") +
geom_point(aes(color = "Baseline", alpha=0.2))+
geom_point(data = day1, aes(color="Day 1", alpha=0.2))+
geom_point(data = day2, aes(color="Day 2", alpha=0.2))+
geom_point(data = day3, aes(color="Day 3", alpha=0.2))+
theme_classic()+
ylim(-1,7.5) +
geom_smooth(method='gam', se = FALSE, aes(color = "Baseline"))+
geom_smooth(data = day1, method='gam', se = FALSE, aes(color = "Day 1"))+
geom_smooth(data = day2, method='gam', se = FALSE, aes(color = "Day 2"))+
geom_smooth(data = day3, method='gam', se = FALSE, aes(color = "Day 3"))+
labs(x = "", y = "H2Omg")+
guides(alpha = "none")+
facet_wrap(~sex) +
scale_colour_manual(name="Dehydration",values=cols)
water
